#!/bin/bash
#
# author: Guy-Laurent Subri
# license: GPLv3
# 
# AMS: Android Music Synchronizer
# This script was initially created because of the little support of MTP on GNU/Linux
# It uses adb, so you need it installed

# To create initial configuration launch createDefaultConfig

readonly name="Android Music Synchronizer"
readonly music_dir="/home/glsubri/media/music"
readonly conf_file=".music_sync.conf"

function pushDir() {
	for f in *
	do
		if [ ! -d "$f" ]
		then
			asd=$(pwd)
			# Note this:
			# My path to my music is /home/glsubri/media/music
			# with the "dir=${asd##*music}, I get rid of the /home/glsubri/media/music.
			# Example:
			# Let's say I'm in my WAR (from U2) directory, then dir will be equal to "U2/WAR"
			# and not /home/glsubri/media/music/U2/WAR
			# So please change the "*music" if the directory where your music is isn't called "music"
			local readonly dir=${asd##*music}
			local readonly full_dir="sdcard/Music"${dir}
			adb shell mkdir -p "$full_dir"
			adb push "$f" "$full_dir"
		fi
	done
}

function parse() {
	if [ ! -e "$conf_file" ]
	then
		pushDir
	else
		cat "$conf_file" | while read l
		do
			cd "$l"
			parse
			cd ..
		done
	fi
}

function launch() {
	cd "$music_dir"
	state=$(adb get-state)
	if [ "$state" = "device" ] && [ -e "$conf_file" ]
	then
		notify-send "$name" "Lauching music update on Android device"
		parse
		notify-send "$name" "Music on Android device updated"
	fi
}

function syntax() {
	echo -e "HELP PAGE FOR AndroidMusicSynchronizer"
	echo -e ""
	echo -e "I'm gonna explain briefly how the progam works:"
	echo -e ""
	echo -e "The program will generate (if you launch it with --initial-config)"
	echo -e "a configuration file named .music_sync.conf (by default) in every"
	echo -e "directory that contains an other directory. Which means that in a"
	echo -e "traditional way of organizing your music, there shouldn't be any"
	echo -e "problems. Now, if you don't want a particular artist or album, edit"
	echo -e "the configuration file and delete the line where your artist/album"
	echo -e "is. It will not be synchronized with your Android device anymore but"
	echo -e "you'll have to delete it from your Android device manually (maybe"
	echo -e "this feature will be added in the future)."
	echo -e ""
	echo -e "Now, the commands:"
	echo -e ""
	echo -e "-a | --add-dir\t\tYou must specify a directory. Adds a directory to your device"
	echo -e "-d | --delete-config\tDeletes all the config files"
	echo -e "-h | --help\t\tPrint this page"
	echo -e "-i | --initial-config\tCreates an initial config files with every artist and albums"
}

function initialConfig() {
	cd "$music_dir"
	createConfig
}

function createConfig {
	isThereDir=false
	for f in *
	do
		if [ -d "$f" ]
		then
			isThereDir=true
			break

		fi
	done

	if $isThereDir
	then
		touch "$conf_file"
		for f in *
		do
			if [ -d "$f" ]
			then
				echo -e "$f" >> "$conf_file"
			fi
		done
	fi
	for f in *
	do
		if [ -d "$f" ]
		then
			cd "$f"
			createConfig
			cd ..
		fi
	done
}

function deleteConfig() {
	cd "$music_dir"
	find . -iname "$conf_file" -delete
	echo -e "Deleted all conf"
	exit 0
}

function addDir() {
	# Set up the nedded variables
	# $dir selects the argument $1 and only keeps what's after "music"
	local readonly dir=${1##*music}
	# keeps the artist name
	local readonly artist=$(echo $dir | awk -F/ '{print $2}')
	# keeps the album name
	local readonly album=$(echo $dir | awk -F/ '{print $3}')
	# is the dir on my android device
	local readonly full_dir="sdcard/Music"${dir}

	# This part is to add the dir to my conf file
	# so that i don't have to add it manually
	artistIn=false
	albumIn=false

	cd "$music_dir"
	#cat "$conf_file" | while read l
	while read l
	do
		#echo "Artist:"
		#echo "$l"
		#echo ""
		echo "Should be false"
		echo $artistIn
		#echo ""
		if [ "$l" = "$artist" ]
		then
			artistIn=true
			cd "$artist"
			while read l2
			do
				if [ "$l2" = "$album" ]
				then
					albumIn=true
					break
				fi
			done < "$conf_file"
			# return in the music dir
			cd ..
			echo "Should be true"
			echo $artistIn
			break
		fi
	done < "$conf_file"
	echo "---------------"
	echo "Should be true"
	echo $artistIn
	echo "---------------"
	echo "$artist"
	echo "$album"
	echo $artistIn
	echo $albumIn

	if [ ! $artistIn ]
	then
		echo "$artist" << "$music_dir""$conf_file"
	else if [ ! $albumIn ]
	then
		echo "$album" << "$dir""$conf_file"
	fi



	#adb shell mkdir -p "$full_dir"
	#cd "$1"
	#pushDir
	#exit 0
}

ARGS=$(getopt -o adhi -l "initial-config,help,delete-config,add-dir")

case "$1" in
	-a|--add-dir)
		shift
		addDir "$1";;
	-d|--delete-config)
		deleteConfig;;
	-h|--help)
		syntax;;
	-i|--initial-config)
		initialConfig;;
	*)
		launch;;
esac

exit 0
